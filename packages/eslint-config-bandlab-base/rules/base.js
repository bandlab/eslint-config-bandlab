module.exports = {
  extends: 'eslint:recommended',
  plugins: ['@stylistic', 'jsdoc', 'unicorn'],
  rules: {
    '@stylistic/array-bracket-spacing': 2,
    '@stylistic/arrow-spacing': [2, { before: true, after: true }],
    '@stylistic/brace-style': 2,
    '@stylistic/comma-spacing': 2,
    '@stylistic/eol-last': 2,
    '@stylistic/func-call-spacing': 2,
    '@stylistic/indent': [2, 2, { SwitchCase: 1 }],
    '@stylistic/key-spacing': [2, { beforeColon: false, afterColon: true }],
    '@stylistic/keyword-spacing': [2, { before: true, after: true }],
    '@stylistic/linebreak-style': [2, 'unix'],
    '@stylistic/lines-around-comment': [
      0,
      { beforeBlockComment: true, beforeLineComment: true },
    ],
    '@stylistic/new-parens': 2,
    '@stylistic/no-extra-parens': [2, 'functions'],
    '@stylistic/no-multi-spaces': [2],
    '@stylistic/no-multiple-empty-lines': [2, { max: 1, maxBOF: 0, maxEOF: 0 }],
    '@stylistic/no-trailing-spaces': 2,
    '@stylistic/object-curly-spacing': [2, 'always'],
    '@stylistic/padding-line-between-statements': [
      2,
      { blankLine: 'always', prev: '*', next: 'function' },
    ],
    '@stylistic/quotes': [2, 'single', { avoidEscape: true }],
    '@stylistic/quote-props': [2, 'consistent-as-needed'],
    '@stylistic/semi': 2,
    '@stylistic/semi-spacing': [2, { before: false, after: true }],
    '@stylistic/space-before-blocks': ['error', 'always'],
    '@stylistic/space-before-function-paren': [
      2,
      { anonymous: 'never', named: 'never', asyncArrow: 'always' },
    ],
    '@stylistic/space-in-parens': ['error', 'never'],
    '@stylistic/space-infix-ops': 2,
    '@stylistic/space-unary-ops': [2, { words: true, nonwords: false }],
    '@stylistic/spaced-comment': [2, 'always'],
    '@stylistic/template-curly-spacing': [2, 'never'],
    'accessor-pairs': 0,
    'block-scoped-var': 2,
    'camelcase': [2, { properties: 'never' }],
    'complexity': [0, 11],
    'consistent-return': 0,
    'curly': [2, 'multi-line'],
    'dot-notation': [2, { allowKeywords: true }],
    'eqeqeq': 2,
    'func-style': [2, 'declaration'],
    'guard-for-in': 2,
    'jsdoc/check-access': 2,
    'jsdoc/check-alignment': 2,
    'jsdoc/check-indentation': 2,
    'jsdoc/check-line-alignment': 2,
    'jsdoc/check-param-names': 2,
    'jsdoc/check-property-names': 2,
    'jsdoc/check-tag-names': [
      2,
      { definedTags: ['element', 'ngdoc', 'restrict'] },
    ],
    'jsdoc/check-types': 2,
    'jsdoc/check-values': 2,
    'new-cap': 2,
    'no-alert': 0,
    'no-array-constructor': 2,
    'no-caller': 2,
    'no-console': 0,
    'no-else-return': 2,
    'no-eval': 2,
    'no-extend-native': 2,
    'no-extra-bind': 1,
    'no-implied-eval': 2,
    'no-iterator': 2,
    'no-label-var': 2,
    'no-labels': 2,
    'no-lone-blocks': 2,
    'no-loop-func': 2,
    'no-multi-str': 2,
    'no-new-func': 2,
    'no-new-object': 2,
    'no-new-wrappers': 2,
    'no-proto': 2,
    'no-redeclare': 2,
    'no-return-assign': 2,
    'no-script-url': 2,
    'no-sequences': 2,
    'no-shadow': [0, { hoist: 'all' }],
    'no-shadow-restricted-names': 2,
    'no-undef': [2, { typeof: true }],
    'no-undef-init': 2,
    'no-undefined': 2,
    'no-unused-expressions': 2,
    'no-unused-vars': [2, { vars: 'all', args: 'after-used' }],
    'no-use-before-define': 0,
    'no-useless-call': 0,
    'no-useless-concat': 2,
    'no-void': 0,
    'no-with': 2,
    'one-var': [2, { var: 'always', let: 'never', const: 'never' }],
    'prefer-const': [2, { destructuring: 'all' }],
    'prefer-template': 2,
    'strict': [0],
    'yoda': 2,
    'unicorn/catch-error-name': ['error', { name: 'err' }],
    'unicorn/no-abusive-eslint-disable': 'error',
    'unicorn/no-process-exit': 'error',
    'unicorn/throw-new-error': 'error',
    'unicorn/number-literal-case': 'error',
    'unicorn/escape-case': 'error',
    'unicorn/no-instanceof-array': 'error',
    'unicorn/no-new-buffer': 'error',
    'unicorn/no-hex-escape': 'error',
    'unicorn/custom-error-definition': 'error',
    'unicorn/prefer-node-protocol': 'error',
    'unicorn/prefer-type-error': 'error',
  },
  settings: {
    jsdoc: {
      preferredTypes: {
        boolean: 'Boolean',
        number: 'Number',
        object: 'Object',
        string: 'String',
      },
      tagNamePreference: { class: 'constructor', return: 'returns' },
    },
  },
};
